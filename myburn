#!/bin/bash

# This script is a wrapper around mythburn.py, which does most of the work
# for mytharchive.
# I prefer to use it rather than mytharchive, because that way, I can still
# watch recording with mythfrontend while this script is busy prepping files
# to burn to DVD.
# It assumes you have set up a mytharchive job file,
# $MYTHARCHIVETMP/config/mydata.xml
# This is a file that mytharchive uses to tell mythburn what recordings
# and videos you want to burn to DVD.
# If you've ever burned a DVD, you probably have such a file in your
# "Myth Archive Temp Directory."

# Please note the options attributes in my example job file, mydata.xml
# I have disabled:
# - creating an ISO with createiso="0"
# - burning a DVD with doburn="0"
# I have also added another attribute, rundvdauthor="0"
# You won't find this in a job file created by mytharchive
# It is recognized by my version of mythburn.py,
# and tells it not to execute dvdauthor.
# That saves us some time in processing because this script will run dvdauthor
# after adding subtitles to the final.mpg files.
# I have included my version of mythburn.py, which is from 0.20.2.
# TODO: provide a patch file instead.

# If you're not comfortable editing $MYHTARCHIVETMP/config/mydata.xml by hand,
# another option is to go ahead and use mytharchive to create the job file
# and run mythburn, then run this script after it's done.
# If you do, be sure to disable the options "Create ISO" and "Burn DVD"
# in the last MythArchive screen, AND
# be sure to comment out the call to mythburn.py below.
# That way, at least you won't waste time running mythburn twice.

# Regardless of whether you use this script or mytharchive to run mythburn,
# you need to disable "Use FIFOs" in MythArchive Settings.
# MythArchive Settings are found in mythfrontend:
# Utilities/Setup -> Setup -> Media Settings -> Archive Files Settings
# "Use FIFOs" is the 4th option on Page 2
# If you don't, the calls in this script to spumux to add subtitles won't work.
# This does mean you'll use more disk space to create DVDs than you did before.
# Let me know if that's an issue. I can probably suggest a workaround.

# MYTHARCHIVETMP should be set to the value of your "Myth Archive Temp Directory."
# You set this MythArchive Settings, page 1, first option.
MYTHARCHIVETMP=/video/tmp

# MYTHARCHIVEDIR should be set to the location where mytharchive, and other
# mythtv plugins, are installed. Typically this is:
MYTHARCHIVEDIR=/usr/share/mythtv/mytharchive
# This is where I've installed my version, with a patched mythburn.py
# and my own theme. If I've forgotten to comment it out, please do so.
MYTHARCHIVEDIR=$HOME/build/share/mythtv/mytharchive

# The following variable determines whether to run tweakdvdxml.py
# tweakdvdxml.py does some postprocessing on the dvdauthor.xml script
# created by mythburn. It puts all the titles into one titleset, and tells
# a dvd player to play titles one after another,
# instead of going back to the main menu after playing each title.
# It also moves the main menu from root menu to the titleset.
# That's because it's most convenient with my universal remote.
# I have only tested this script with dvdauthor.xml files created with
# my own theme, so you probably should set this value to false.
# FWIW, I think it will work with the Compact theme.
RUNTWEAKDVDXML=true

# Change the following to the name of your DVD device
DEVDVD=/dev/dvd1

date "+%F %T myburn[$$] begin"

mkdir -p $MYTHARCHIVETMP/logs
rm -rf $MYTHARCHIVETMP/work
mkdir -p $MYTHARCHIVETMP/work

date "+%F %T myburn[$$] Executing mythburn"
python $MYTHARCHIVEDIR/scripts/mythburn.py -j $MYTHARCHIVETMP/config/mydata.xml -l $MYTHARCHIVETMP/logs/progress.log || exit $?

if [ "$RUNTWEAKDVDXML" = true ]
then
    infile=$MYTHARCHIVETMP/work/dvdauthor.xml
    [ -f $MYTHARCHIVETMP/work/dvdauthor_orig.xml ] && infile=$MYTHARCHIVETMP/work/dvdauthor_orig.xml
    tweakdvdxml.py -t $MYTHARCHIVETMP -i $infile || exit $?
    [ ! -f $MYTHARCHIVETMP/work/dvdauthor_orig.xml ] && \
        mv $MYTHARCHIVETMP/work/dvdauthor.xml $MYTHARCHIVETMP/work/dvdauthor_orig.xml
    mv -f $MYTHARCHIVETMP/work/new-dvdauthor.xml $MYTHARCHIVETMP/work/dvdauthor.xml
fi

# Post process each file that mythburn has prepped for DVD burning
for dir in $MYTHARCHIVETMP/work/[1-9]*
do

    # Mythburn creates one directory per recording and names them 1,2,3...
    # This test is double checking that the pattern above found those
    # working directories
    [ ! -d $dir ] && continue

    # Find the original recording file
    streaminfo=$dir/streaminfo.xml
    [ -f $dir/streaminfo_orig.xml ] && streaminfo=$dir/streaminfo_orig.xml
    recording=`grep filename= $streaminfo | \
        sed -e 's/.*filename="//' -e 's/".*//'`
    mkdir -p $dir/subs

    date "+%F %T myburn[$$] Checking $recording for CC/Teletext"

    # Scan the file, looking for closed captions
    # If any are found, they'll be converted to .png images
    # and the file, spumux.xml, will be built with references
    # to the images and timestamps.

    # Note: LD_LIBRARY_PATH is set to pick up my patched version of libzvbi
    # More on that later. It should be OK for it to be set to a non-existant
    # directory (but I could be wrong).
    LD_LIBRARY_PATH=$HOME/build/lib \
        cc2subtitles -i $recording -p $dir/subs/ -x $dir/spumux.xml || \
        continue

    # A little test allowing this script to be reentrant.
    infile=$dir/final.mpg
    [ -f $dir/final_orig.mpg ] && infile=$dir/final_orig.mpg
    outfile=$dir/new-final.mpg

    date "+%F %T myburn[$$] Adding subtitles to $outfile"

    # Let spumux (a dvdauthor tool) convert the .png images into subtitles
    # and add them to the final.mpg file.
    spumux $dir/spumux.xml < $infile > $outfile || { rm $outfile; continue; }

    # If spumux succeeds, the final.mpg built by mythburn is renamed to
    # final_orig.mpgC and the one with subtitles is renamed final.mpg
    # That's the name specified in dvdauthor.xml
    [ ! -f $dir/final_orig.mpg ] && mv $dir/final.mpg $dir/final_orig.mpg
    mv -f $outfile $dir/final.mpg
done

date "+%F %T myburn[$$] Executing dvdauthor"
rm -rf $MYTHARCHIVETMP/work/dvd
dvdauthor -x $MYTHARCHIVETMP/work/dvdauthor.xml || exit $?

# I've had trouble burning DVDs on occasion, so I prefer to create an ISO
# and then burn the ISO to dvd. If you trust growisofs to do both steps
# successfully, feel free to change these commands to your liking.
# Especially if you don't have the disk space to play with.

date "+%F %T myburn[$$] Executing mkisofs"
mkisofs -dvd-video -V 'Test' -o $MYTHARCHIVETMP/work/mythburn.iso $MYTHARCHIVETMP/work/dvd || exit $?

date "+%F %T myburn[$$] Executing growisofs"
growisofs -dvd-compat -Z $DEVDVD=$MYTHARCHIVETMP/work/mythburn.iso || exit $?

date "+%F %T myburn[$$] Success!"
